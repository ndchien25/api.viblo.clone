{
    "openapi": "3.0.0",
    "info": {
        "title": "Viblo API",
        "description": "API documentation for Viblo, utilizing Laravel Sanctum for authentication.",
        "contact": {
            "email": "chien.nd@zinza.com.vn"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.viblo.clone",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "bb41d9524d1781b0e0f057673979e5c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "operationId": "3745f4df64a4b5123749f6463365b55a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send reset link email",
                "operationId": "5309b755ddc292cd4d44e84b6a845490",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "nona.upton@example.org"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid email",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "429": {
                        "description": "Many Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "operationId": "a021b5043fe1e643215dead51c8940b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "944f39c800d7ae24b55b18868e032d07",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "operationId": "7029e3e8d2d6c300d23adff07cfb497e",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{postId}/comments": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get parent comments for a post",
                "operationId": "5da4f14d58175282d7bd4e841a16e212",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "The ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of comments per page",
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parent comments fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommentResource"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "total_pages": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "operationId": "e750cd43bc1bf26eee7c72e6d14cb407",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "The ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{postId}/comments/{parentId}/replies": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get child comments for a parent comment",
                "operationId": "36396823cdaafc46483787afb2797f15",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "The ID of the post comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "parentId",
                        "in": "path",
                        "description": "The ID of the parent comment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of comments per page",
                        "schema": {
                            "type": "integer",
                            "default": 3
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Child comments fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommentResource"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "total_pages": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{postId}/comments/{id}": {
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "operationId": "aae0b905089acf7b6930ed6c683c07f6",
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "description": "Updated content of the comment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid Input",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users",
                "operationId": "5ceff91ee8b0026735f8f186f63adc62",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email_or_username",
                    "password"
                ],
                "properties": {
                    "email_or_username": {
                        "type": "string",
                        "example": "nona.upton@example.org"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "required": [
                    "username",
                    "email",
                    "password",
                    "c_password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "example": "username123"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "c_password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "required": [
                    "email",
                    "password",
                    "c_password",
                    "token"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword123"
                    },
                    "c_password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword123"
                    },
                    "token": {
                        "type": "string",
                        "example": "reset_token_here"
                    }
                },
                "type": "object"
            },
            "StoreCommentRequest": {
                "required": [
                    "post_id",
                    "type",
                    "content"
                ],
                "properties": {
                    "post_id": {
                        "description": "ID of the post",
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "description": "Type of comment",
                        "type": "string",
                        "enum": [
                            "post",
                            "question"
                        ],
                        "example": "post"
                    },
                    "content": {
                        "description": "Content of the comment",
                        "type": "string",
                        "example": "This is a sample comment."
                    },
                    "parent_id": {
                        "description": "ID of the parent comment (if it's a reply)",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CommentResource": {
                "properties": {
                    "id": {
                        "description": "The unique identifier of the comment",
                        "type": "integer",
                        "example": 1
                    },
                    "post_id": {
                        "description": "The ID of the associated post",
                        "type": "integer",
                        "example": 10
                    },
                    "user_id": {
                        "description": "The ID of the user who made the comment",
                        "type": "integer",
                        "example": 5
                    },
                    "content": {
                        "description": "The content of the comment",
                        "type": "string",
                        "example": "This is a sample comment."
                    },
                    "type": {
                        "description": "The type of comment",
                        "type": "string",
                        "enum": [
                            "post",
                            "question"
                        ],
                        "example": "post"
                    },
                    "row_count": {
                        "description": "The row count of the comment",
                        "type": "integer",
                        "example": 0
                    },
                    "parent_id": {
                        "description": "The ID of the parent comment if this is a reply",
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "created_at": {
                        "description": "The date and time when the comment was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T12:34:56"
                    },
                    "updated_at": {
                        "description": "The date and time when the comment was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-09-25T12:34:56"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "properties": {
                    "id": {
                        "description": "The unique identifier of the user",
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "description": "The username of the user",
                        "type": "string",
                        "example": "john_doe"
                    },
                    "display_name": {
                        "description": "The display name of the user",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "fullname": {
                        "description": "The full name of the user",
                        "type": "string",
                        "example": "Johnathan Doe"
                    },
                    "email": {
                        "description": "The email address of the user",
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "avatar": {
                        "description": "The URL of the user's avatar",
                        "type": "string",
                        "example": "https://example.com/avatar/john_doe.jpg"
                    },
                    "role_id": {
                        "description": "The role ID of the user",
                        "type": "integer",
                        "example": 2
                    },
                    "address": {
                        "description": "The address of the user",
                        "type": "string",
                        "example": "123 Main St, Springfield",
                        "nullable": true
                    },
                    "phone": {
                        "description": "The phone number of the user",
                        "type": "string",
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "university": {
                        "description": "The university of the user",
                        "type": "string",
                        "example": "Springfield University",
                        "nullable": true
                    },
                    "followers_count": {
                        "description": "The number of followers the user has",
                        "type": "integer",
                        "example": 100
                    },
                    "following_count": {
                        "description": "The number of users the user is following",
                        "type": "integer",
                        "example": 50
                    },
                    "total_view": {
                        "description": "The total view count for the user's content",
                        "type": "integer",
                        "example": 1500
                    },
                    "bookmark_count": {
                        "description": "The number of bookmarks the user has",
                        "type": "integer",
                        "example": 25
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Comments",
            "description": "API endpoints for managing comments"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}